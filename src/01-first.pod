=head0 The Screen

=head1 Background

X<Video>
X<Video Device>
X<Surface>
X<Screen>

SDL manages a single screen which is attached to the video device. Some
common examples of video devices are through X11 and DirectX. An SDL
application may contain one or more Surfaces.

The screen is typically created using the C<SDLx::App> class.

=begin programlisting

    use strict;
    use warnings;
    use SDL;
    use SDLx::App;

    my $app = SDLx::App->new();

    sleep( 2 );

=end programlisting

The above code causes a window to appear on the desktop with nothing in it.
Most current systems will fill it with a default black screen.
For some systems, however, a transparent window might be displayed instead.
It is a good idea to ensure that what we intend to display is shown, so we
update the C<$app> to ensure the screen is drawn black.

    $app->update();

=head1 C<SDLx::App> Options

C<SDLx::App> also allows you to specify several options for your application.

=head2 Dimensions

First are the physical dimensions of the screen itself. Let's make the screen
of the C<SDLx::App> window a square size of 400Ã—400 pixels. Change the
initialization line to:

    my $app = SDLx::App->new( width => 400, height => 400 );

=head2 Title

You will notice that the window's title is either blank or on some window
managers it displays the path to the script file, depending on your operating
system. Suppose we want a title for a new Pong clone game:

    my $app = SDLx::App->new( width  => 400,
                              height => 400,
                              title  => 'Pong - A clone' );

At this point your screen will be:

=for figure
       \includegraphics[width=0.5\textwidth]{../src/images/first.png}
        \caption{Your first SDL screen!}
         \label{fig:first_screen}

=for vim: spell

=head2 Shortcuts

There are short-hand versions of the parameter names used in the call to
C<new()>. The parameters C<width>, C<height>, and C<title> may be abbreviated
as C<w>, C<h>, and C<t> respectively. So the previous example could also be
written like this:

    my $app = SDLx::App->new( w => 400,
                              h => 400,
                              t => 'Pong - A clone' );
