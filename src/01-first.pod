=head0 The Screen

X<Video>
X<Video Device>
X<Surface>
X<Screen>

SDL's primary purpose is to display graphics. It does so by providing an
abstraction called a I<screen>, which represents a I<video device>. This video
device is an interface provided by your operating system, such as X11 or
DirectX. Before you can display anything, you must create a screen. The
C<SDLx::App> class does so for you:

=begin programlisting

    use strict;
    use warnings;
    use SDL;
    use SDLx::App;

    my $app = SDLx::App->new();

    sleep( 2 );

=end programlisting

This example causes an empty window to appear on the desktop.  Most systems
will fill that window with the color black. Other systems might display a
transparent window. SDL's default behavior is to fill the screen with black. To
enforce this behavior on all systems, you must C<update()> the app to draw to
the window:

    $app->update();

=head1 C<SDLx::App> Options

X<SDL Application>
X<C<SDLx::App>>

C<SDLx::App> allows you to specify several options for the screen and your
application. First are the physical dimensions of the screen itself. To make
the screen of the C<SDLx::App> window a 400Ã—400 pixel square, change the
initialization line to:

    my $app = SDLx::App->new( width => 400, height => 400 );

Another important option is the window's title. Some systems display the path
to the running program. Others leave the title blank. You can change the
displayed title with another argument to the C<SDLx::App> constructor:

X<C<SDLx::App> constructor>

    my $app = SDLx::App->new( width  => 400,
                              height => 400,
                              title  => 'Pong - A clone' );

At this point your screen will be:

=for figure
       \includegraphics[width=0.5\textwidth]{../src/images/first.png}
        \caption{Your first SDL screen!}
         \label{fig:first_screen}

=for vim: spell

=head2 Shortcuts

X<C<SDLx::App> constructor parameters, shortcut>

Abbreviations for these parameters are available. Instead of C<width>,
C<height>, and C<title>, you may use C<w>, C<h>, and C<t> respectively. The
previous example could also be written:

    my $app = SDLx::App->new( w => 400,
                              h => 400,
                              t => 'Pong - A clone' );
