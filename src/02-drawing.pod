=head0 Drawing

SDL provides several ways to draw on screen; these methods can be broken down into: Primitives, Images and Text. 
All three methods draw on a single object the Surface. The Surface is represented by X<SDLx::Surface>. Even our 
X<SDLx::App> is a C<SDLx::Surface>. This means that we can draw directly on the X<SDLx::App>, however there are 
several advantages to drawing on multiple surfaces. In this chapter we will explore these methods of drawing, and 
make a pretty picture.

=head1 On the Fly

Sometimes we must draw graphics on the fly. 

=head2 Rectangles

Rectangles are a common building blocks for games.

=head2 Circles

Circles are pretty groovy. We use SDL_gfx library for this. 

=head2 GFX

SDL_gfx also provides these other neat drawing functions.

=head1 Multiple Surfaces

Now we don't always use one surface. Most games use many Surfaces. These are held in memory.
You can make blank ones and draw on them. Or you can make Surfaces from various data. 

=head2 Creating Surfaces

=head3 Images

Images can be loaded as surfaces.

=head3 Sprites

Sprites is a lot better way to think of this.

=head3 Text

=head4 Default GFX

It is ugly but can be useful.

=head4 TrueType 

This is probably the more common way to use text in SDL. However it has its limitations

=head4 Pango 

Pango features several rendering options, and thus is heavy. It is good for multilingual support.

=for vim: spell
